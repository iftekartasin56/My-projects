<style>
    body {
        font-family: 'Roboto', sans-serif;
    }

    :root {
        --cl-primary-color: #00B5AB;
        --cl-secondary-color: #dbebea;
    }
    #mx_cl *,
    ::after,
    ::before {
        box-sizing: border-box;
    }

    #mx_cl {
        line-height: 1.5;
        font-family: inherit;
    }

    #mx_cl .container {
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
        margin-right: auto;
        margin-left: auto;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #000000;
        text-align: left;
    }

    #mx_cl label {
        display: inline-block;
        font-size: 16px;
        font-weight: 500;
        margin-bottom: 0.5rem;
    }

    #mx_cl .row {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        margin-right: -15px;
        margin-left: -15px;
    }

    #mx_cl .col-md-1,
    #mx_cl .col-md-10,
    #mx_cl .col-md-11,
    #mx_cl .col-md-12,
    #mx_cl .col-md-2,
    #mx_cl .col-md-3,
    #mx_cl .col-md-4,
    #mx_cl .col-md-5,
    #mx_cl .col-md-6,
    #mx_cl .col-md-7,
    #mx_cl .col-md-8,
    #mx_cl .col-md-9 {
        position: relative;
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
    }

    #mx_cl .form-group {
        margin-bottom: 1rem;
    }

    #mx_cl .form-control {
        display: block;
        width: 100%;
        height: calc(1em + 0.75rem + 2px);
        padding: 0.275rem 0.75rem;
        font-size: 16px;
        font-weight: 400;
        line-height: 1.5;
        color: #000000;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #dddddd;
        transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
    }

    #mx_cl .form-controll {
        display: block;
        width: 100%;
        height: calc(1em + 0.75rem + 2px);
        padding: 0.275rem 0.75rem;
        font-size: 16px;
        font-weight: 400;
        line-height: 1.5;
        color: #000000;
        background-color: #FFF;
        background-clip: padding-box;
        border: 1px solid var(--cl-secondary-color);
        transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
    }

    #mx_cl .form-control-border-bottom {
        display: block;
        width: 100%;
        height: 20px;
        padding: 3px 3px;
        font-size: 16px;
        font-weight: 400;
        line-height: 1.5;
        color: #000000;
        background-color: #fff;
        background-clip: padding-box;
        border: none;
        border-bottom: 1px solid var(--cl-secondary-color);
        margin-left: 3px;
        text-align: left;

    }

    #mx_cl .form-control:focus {
        outline: none;
    }

    #mx_cl .form-controll:focus {
        outline: none;
    }

    #mx_cl .form-control-border-bottom:focus {
        outline: none;
    }

    #mx_cl .btn {
        display: block;
        font-weight: 400;
        color: #212529;
        text-align: center;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-color: transparent;
        border: 1px solid transparent;
        padding: .275rem 2.2rem;
        line-height: 1.3;
        transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
        text-align: center;
    }

    #mx_cl .btn-primary {
        display: block;
        width: 100%;
        background-color: var(--cl-primary-color);
        color: #fff;
        border-radius: 5px;
    }
    #mx_cl .btn-primary:hover {
        background-color: #fff;
        border-color: var(--cl-primary-color);
        color: var(--cl-primary-color);
    }

    #mx_cl .text-center {
        text-align: center;
    }
    #mx_cl .col-sp-sm-6 {
        position: relative;
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
        -ms-flex: 0 0 50%;
        flex: 0 0 50%;
        max-width: 50%;
    }
    #mx_cl .col-sp-sm-4 {
        position: relative;
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
        -ms-flex: 0 0 33.333333%;
        flex: 0 0 33.333333%;
        max-width: 33.333333%;
    }

    @media (min-width: 576px) {
        #mx_cl .container {
            max-width: 100%;
        }
    }

    @media (min-width: 768px) {
        #mx_cl .container {
            max-width: 100%;
        }

        #mx_cl .col-md-12 {
            -ms-flex: 0 0 100%;
            flex: 0 0 100%;
            max-width: 100%;
        }

        #mx_cl .col-md-9 {
            -ms-flex: 0 0 75%;
            flex: 0 0 75%;
            max-width: 75%;
        }

        #mx_cl .col-md-8 {
            -ms-flex: 0 0 66.666667%;
            flex: 0 0 66.666667%;
            max-width: 66.666667%;
        }

        #mx_cl .col-md-7 {
            -ms-flex: 0 0 58.33333%;
            flex: 0 0 58.33333%;
            max-width: 58.33333%;
        }

        #mx_cl .col-md-6 {
            -ms-flex: 0 0 50%;
            flex: 0 0 50%;
            max-width: 50%;
        }

        #mx_cl .col-md-5 {
            -ms-flex: 0 0 41.666667%;
            flex: 0 0 33.333333%;
            max-width: 33.333333%;
        }

        #mx_cl .col-md-4 {
            -ms-flex: 0 0 33.333333%;
            flex: 0 0 33.333333%;
            max-width: 33.333333%;
        }

        #mx_cl .col-md-3 {
            -ms-flex: 0 0 25%;
            flex: 0 0 25%;
            max-width: 25%;
        }
    }

    @media (min-width: 992px) {
        #mx_cl .container {
            max-width: 960px;
        }
    }

    @media (min-width: 1200px) {
        #mx_cl .container {
            max-width: 950px;
        }
    }

    #mx_cl .text-right {
        text-align: right;
    }

    #mx_cl .form-group,
    #mx_cl .input-group {
        position: relative;
        margin-bottom: 15px;
    }

    #mx_cl .top-title {
        font-size: 35px;
        color: var(--cl-primary-color);
        border-bottom: 1px solid var(--cl-primary-color);
    }
    #mx_cl .option-sec .is-active {
        background-color: var(--cl-primary-color);
        color: #fff;
        border-color: var(--cl-primary-color);
    }

    #mx_cl .custom-input-sec {
        display: flex;
        align-items: center;
    }

    #mx_cl .input-title {
        display: block;
        border-bottom: 1px solid #E6E6E6;
        padding-bottom: 5px;
    }

    #mx_cl .right-heading {
        color: var(--cl-primary-color);
        font-size: 20px;
        border-bottom: 1px solid #E6E6E6;
    }

    #mx_cl .right-input-section {
        margin-top: 10px;
    }

    #mx_cl .err-msg {
        font-style: italic;
        color: red;
        font-size: 14px;
        margin: 5px 0;
    }

    #mx_cl .btn-one {
        text-align: center;
        border-top-left-radius: 25px;
        border-bottom-left-radius: 25px;
        width: 50%;
        border: 1px solid var(--cl-primary-color);
        cursor: pointer;
    }

    #mx_cl .btn-two {
        border-top-right-radius: 25px;
        border-bottom-right-radius: 25px;
        width: 50%;
        border: 1px solid var(--cl-primary-color);
        text-align: center;
        cursor: pointer;
    }

    #mx_cl .output-head {
        display: block !important;
        color: var(--cl-primary-color);
        font-size: 25px;
        font-weight: 600;
        border-bottom: 1px solid var(--cl-secondary-color);
        margin: 0px;
        margin-bottom: 5px;
    }

    #mx_cl .output-section {
        display: flex;
        align-items: center;
        gap: 20px;
        margin-top: 39px;
    }

    #mx_cl .final-output {
        padding: 30px;
        border: 1px solid var(--cl-primary-color);
        border-radius: 5px;
        margin-top: 43px;
    }

    #mx_cl .final-output-p {
        display: block !important;
        font-size: 25px;
        color: var(--cl-primary-color);
        font-weight: 600;
        border-bottom: 1px solid var(--cl-secondary-color);

    }
    #mx_cl .final-output-result{
        font-size: 25px;
        font-weight: 600;
    }
    #mx_cl .option-sec {
        display: flex;
        flex: 2;
    }
    #mx_cl .input-sec {
        display: flex;
        flex: 3;
        gap: 5px;
        height: 26px;
        align-items: flex-end;
    }
    #mx_cl .input-elm {
        position: relative;
    }
    #mx_cl .append-text {
        position: absolute;
        right: 0px;
        bottom: 2px;
        font-size: 14px;
    }
    #mx_cl .append-text-2 {
        position: absolute;
        right: 9px;
        bottom: 1px;
        font-size: 16px;
    }
    #mx_cl .check-box {
        display: flex;
        margin-bottom: 6px;
        cursor: pointer;
    }

    #mx_cl .tck-mark {
        display: inline-block;
        margin-top: 1px;
    }

    #mx_cl .tick-mark {
        background-color: #ffffff;
        padding: 2px;
        color: #fff;
        width: 20px;
        height: 20px;
        font-size: 14px;
        align-items: center;
        justify-content: center;
        margin: 0 auto;
        border: 1px solid var(--cl-primary-color);
        cursor: pointer;
        display: flex;
        margin-right: 10px;
        border-radius: 25px;
    }

    #mx_cl .check-box.is-active .tick-mark {
        background-color: var(--cl-primary-color);
        border: 1px solid var(--cl-primary-color);
    }
    #mx_cl .check-box:hover:not(.is-active) .tick-mark {
        background-color: #dddddd;
    }

    #mx_cl .rs-sec {
        flex: 1;
    }
    #mx_cl .err-in {
        border-color: red;
    }
    #mx_cl .small-check {
        font-size: 12px;
        color: #7c7c7c;
    }
    @media (max-width: 786px){
        #mx_cl .right-heading {
            margin-top: 25px;
        }
        #mx_cl .top-title {
            font-size: 30px;
        }
        #mx_cl .output-section {
            margin-top: 10px;
        }
        #mx_cl .final-output {
            margin-top: 16px;
        }
        #mx_cl .form-control-border-bottom{
            height: 100%;
        }
    }
</style>
</head>
<body>
<div class="ms-cl" id="mx_cl">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h3 class="top-title">MACRO CALCULATOR</h3>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-sp-sm-6">
                        <label for="in_age" class="common-p">Age</label>
                    </div>
                    <div class="col-sp-sm-6">
                        <div class="form-group">
                            <input type="text" class="form-controll in-num text-center" id="in_age">
                        </div>
                    </div>
                    <div class="col-sp-sm-6">
                        <label for="gender" class="common-p">Gender</label>
                    </div>
                    <div class="col-sp-sm-6">
                        <div class="option-sec form-group">
                            <span class="btn-one in-gender is-active" data-value="M">Male</span>
                            <span class="btn-two in-gender" data-value="F">Female</span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label for="height" class="common-p">Height</label>
                    </div>
                    <div class="col-md-6">
                        <div class="custom-input-sec form-group">
                            <div class="option-sec">
                                <span class="btn-one in-h-unit is-active" data-value="ft">ft</span>
                                <span class="btn-two in-h-unit" data-value="m">m</span>
                            </div>
                            <div class="input-sec">
                                <div class="input-elm">
                                    <input type="text" class="form-control-border-bottom in-num" id="in_height_1">
                                    <span class="append-text" id="h1_unit">ft</span>
                                </div>
                                <div class="input-elm">
                                    <input type="text" class="form-control-border-bottom in-num" id="in_height_2">
                                    <span class="append-text" id="h2_unit">in</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label for="weight" class="common-p">Weight</label>
                    </div>
                    <div class="col-md-6">
                        <div class="custom-input-sec form-group">
                            <div class="option-sec">
                                <span class="btn-one in-w-unit is-active" data-value="lbs">lbs</span>
                                <span class="btn-two in-w-unit" data-value="kg">kg</span>
                            </div>
                            <div class="input-sec">
                                <div class="input-elm">
                                    <input type="text" class="form-control-border-bottom in-num text-center" id="in_weight">
                                    <span class="append-text" id="w_unit">lbs</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="input-title">Goal</label>
                    <div class="check-box in-goal is-active" data-value="maintenance">
                        <div class="tck-mark"><span class="tick-mark">✓</span></div>
                        <span class="option-title" style="cursor: pointer;">Maintain Current Weight</span>
                    </div>
                    <div class="check-box in-goal" data-value="weight-loss">
                        <div class="tck-mark"><span class="tick-mark">✓</span></div>
                        <span class="option-title" style="cursor: pointer;">Lose Weight</span>
                    </div>
                    <div class="check-box in-goal" data-value="weight-gain">
                        <div class="tck-mark"><span class="tick-mark">✓</span></div>
                        <span class="option-title" style="cursor: pointer;">Gain Weight</span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="input-title">Activity Level</label>
                    <div class="check-box in-act-level is-active" data-value="S">
                        <div class="tck-mark"><span class="tick-mark">✓</span></div>
                        <div class="main-check">Sedentary <div class="small-check">Little or no exercise</div></div>
                    </div>
                    <div class="check-box in-act-level" data-value="L">
                        <div class="tck-mark"><span class="tick-mark">✓</span></div>
                        <div class="main-check">Lightly active <div class="small-check">Light exercise/sports 3-5 days a week</div></div>
                    </div>
                    <div class="check-box in-act-level" data-value="M">
                        <div class="tck-mark"><span class="tick-mark">✓</span></div>
                        <div class="main-check">Moderately active<div class="small-check">Moderate exercise/sports 3-5 days a week</div></div>
                    </div>
                    <div class="check-box in-act-level" data-value="V">
                        <div class="tck-mark"><span class="tick-mark">✓</span></div>
                        <div class="main-check">Very active <div class="small-check"> Hard exercise/sports 6-7 days a week</div></div>
                    </div>
                    <div class="check-box in-act-level" data-value="E">
                        <div class="tck-mark"><span class="tick-mark">✓</span></div>
                        <div class="main-check">Extra active<div class="small-check">Hard exercise/sports 6-7 days a week, plus physical job</div></div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="right-heading">Customize Your Macro Ratio</div>
                <div class="row right-input-section">
                    <div class="col-sp-sm-4">
                        <div class="form-group">
                            <label for="in_protein" class="left-sub-heading">Protein</label>
                            <div class="input-group">
                                <input type="text" class="form-controll cl-input in-pr" id="in_protein" value="30">
                                <span class="append-text-2">%</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-sp-sm-4">
                        <div class="form-group">
                            <label for="in_carbs" class="left-sub-heading">Carbs</label>
                            <div class="input-group">
                                <input type="text" class="form-controll cl-input in-pr" id="in_carbs" value="40">
                                <span class="append-text-2">%</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-sp-sm-4">
                        <div class="form-group">
                            <label for="in_fats" class="left-sub-heading">Fats</label>
                            <div class="input-group">
                                <input type="text" class="form-controll cl-input in-pr" id="in_fats" value="30">
                                <span class="append-text-2">%</span>
                            </div>
                        </div>
                    </div>
                </div>
                <p class="err-msg" style="display: none;" id="prcnt_err">Macro ratio must total 100.</p>
                <div class="right-mid-section">
                    <div class="output-section">
                        <img src="img/protin.png" alt="" srcset="">
                        <div class="rs-sec">
                            <p class="output-head">Protein</p>
                            <div class="right-mid-output">
                                <span id="rs_1">-</span>
                            </div>
                        </div>
                    </div>
                    <div class="output-section">
                        <img src="img/carbs.png" alt="" srcset="">
                        <div class="rs-sec">
                            <p class="output-head">Carbs</p>
                            <div class="right-mid-output">
                                <span id="rs_2">-</span>
                            </div>
                        </div>
                    </div>
                    <div class="output-section">
                        <img src="img/fat.png" alt="" srcset="">
                        <div class="rs-sec">
                            <p class="output-head">Fats</p>
                            <div class="right-mid-output">
                                <span id="rs_3">-</span>
                            </div>
                        </div>
                    </div>
                    <div class="final-output">
                        <span class="final-output-p">Total Calories</span>
                        <span class="final-output-result" id="rs_4">-</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/autonumeric@4.5.4"></script>
<script>
    jQuery(document).ready(function($){
        let in_gender = "M";
        let in_h_unit = "ft";
        let in_w_unit = "lbs";
        let in_goal = "maintenance";
        let in_act_level = "S";

        const numOptionCurrency = {
            digitGroupSeparator        : ',',
            decimalCharacter           : '.',
            decimalCharacterAlternative: '.',
            currencySymbol             : '',
            currencySymbolPlacement    : AutoNumeric.options.currencySymbolPlacement.prefix,
            decimalPlaces              : 0,
            minimumValue: 0
        };

        const numOptionPercent = {
            digitGroupSeparator        : ',',
            decimalCharacter           : '.',
            decimalCharacterAlternative: '.',
            currencySymbol             : '',
            currencySymbolPlacement    : AutoNumeric.options.currencySymbolPlacement.suffix,
            decimalPlaces              : 2,
            minimumValue: 0,
            maximumValue: 100
        };        
        
        const anElement1 = AutoNumeric.multiple('.in-num', numOptionCurrency);
        const elm1 = new AutoNumeric('#in_protein', numOptionPercent);
        const elm2 = new AutoNumeric('#in_carbs', numOptionPercent);
        const elm3 = new AutoNumeric('#in_fats', numOptionPercent);

        const nft = Intl.NumberFormat("en-US", {
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        });

        $(".in-gender").on("click", function(){
            $(".in-gender").removeClass("is-active");
            $(this).addClass("is-active");

            in_gender = $(this).data("value");

            calcFunc();
        });

        $(".in-h-unit").on("click", function(){
            $(".in-h-unit").removeClass("is-active");
            $(this).addClass("is-active");

            in_h_unit = $(this).data("value");

            if(in_h_unit == "ft"){
                $("#h1_unit").text("ft");
                $("#h2_unit").text("in");
            } else {
                $("#h1_unit").text("m");
                $("#h2_unit").text("cm");
            }

            calcFunc();
        });

        $(".in-w-unit").on("click", function(){
            $(".in-w-unit").removeClass("is-active");
            $(this).addClass("is-active");

            in_w_unit = $(this).data("value");

            $("#w_unit").text(in_w_unit);

            calcFunc();
        });

        $(".in-goal").on("click", function(){
            $(".in-goal").removeClass("is-active");
            $(this).addClass("is-active");

            in_goal = $(this).data("value");

            if(in_goal == "maintenance"){
                elm1.set(30);
                elm2.set(40);
                elm3.set(30);
            } else if(in_goal == "weight-loss"){
                elm1.set(40);
                elm2.set(40);
                elm3.set(20);
            } else if(in_goal == "weight-gain"){
                elm1.set(30);
                elm2.set(40);
                elm3.set(30);
            }
            calcFunc();
        });

        $(".in-act-level").on("click", function(){
            $(".in-act-level").removeClass("is-active");
            $(this).addClass("is-active");

            in_act_level = $(this).data("value");

            calcFunc();
        });

        $(".cl-input, .in-num").on("input", function(){
            calcFunc();
        });

        $(".cl-input").on("change", function(){
            calcFunc()
        });

        $("#fr_sub_btn").on("click", function(){
            let in_email = $("#in_email").val();
            if(validateEmailAdd(in_email)){
                $("#in_email").removeClass("err-in");

                $("#wpforms-4178-field_1").val(in_email);    
                $("#wpforms-4178-field_2").val(txt_msg);
                $("#wpforms-submit-4178").click();

                setTimeout(() => {
                    $("#in_email").val("");
                }, 1000);
            } else {
                $("#in_email").addClass("err-in");
            }
        });

        function calcFunc(){
            in_age = removeSign($("#in_age").val());
            in_height_1 = removeSign($("#in_height_1").val());
            in_height_2 = removeSign($("#in_height_2").val());
            in_weight = removeSign($("#in_weight").val());
            in_protein = removeSign($("#in_protein").val());
            in_carbs = removeSign($("#in_carbs").val());
            in_fats = removeSign($("#in_fats").val());

            var height = 0;
            var heightTens = in_height_1;
            var heightUnits = in_height_2;
            var heightType = in_h_unit;
            var weight = in_weight;
            var weightType = in_w_unit;
            var calories = 0;
            var age = in_age;
            var sex = in_gender;
            var job = in_act_level;
            var goal = in_goal;
            var carbratio = in_carbs/100;
            var protonratio = in_protein/100;
            var fatratio = in_fats/100;
            var carbratiocount = in_carbs;
            var protonratiocount = in_protein;
            var fatratiocount = in_fats;
            var carbs = 0;
            var protons = 0;
            var fats = 0;
            var ratiocount = carbratiocount + protonratiocount + fatratiocount;

            let sub_height_unit = "in";

            if(ratiocount == 100){
                $("#prcnt_err").hide();
                
                if(in_age && (in_height_1 || in_height_2) && in_weight){
                    if (isNaN(heightUnits) || !heightUnits) {
                        heightUnits = 0;
                    }

                    if (heightType == "ft") {
                        height = ((heightTens * 30.48) + (heightUnits * 2.54));
                    } else {
                        sub_height_unit = "cm";
                        height = (heightTens * 100) + heightUnits;
                    }

                    if (weightType == "lbs") {
                        weight = (weight * 0.453592);
                    }

                    if (sex == "M") {
                        calories = ((weight * 10) + (height * 6.25) - (age * 5) + 5);
                    } else {
                        calories = ((weight * 10) + (height * 6.25) - (age * 5) - 161);
                    }

                    let activity_text = "";
                    switch (job) {
                        case "S":
                            calories = Math.round(calories * 1.2);
                            activity_text = "Sedentary";
                            break;
                        case "L":
                            calories = Math.round(calories * 1.375);
                            activity_text = "Lightly active";
                            break;
                        case "M":
                            calories = Math.round(calories * 1.550);
                            activity_text = "Moderately active";
                            break;
                        case "V":
                            calories = Math.round(calories * 1.725);
                            activity_text = "Very active";
                            break;
                        case "E":
                            calories = Math.round(calories * 1.9);
                            activity_text = "Extra active";
                            break;
                    }

                    let goal_text = "";
                    switch (goal) {
                        case "weight-loss":
                            if (calories <= 2000) calories = Math.round(0.9 * calories);
                            if (calories > 2000) calories = Math.round(0.8 * calories);
                            ccarbs = Math.round(carbratio * calories);
                            cprotons = Math.round(protonratio * calories);
                            cfats = Math.round(fatratio * calories);
                            carbs = Math.round(carbratio * calories / 4);
                            protons = Math.round(protonratio * calories / 4);
                            fats = Math.round(fatratio * calories / 9);
                            ratio = "40% carbs / 40% protein / 20% fats"
                            var rec = "calc-rec-wl";
                            goal_text = "Weight loss";
                            break;
                        case "maintenance":
                            ccarbs = Math.round(carbratio * calories);
                            cprotons = Math.round(protonratio * calories);
                            cfats = Math.round(fatratio * calories);
                            carbs = Math.round(carbratio * calories / 4);
                            protons = Math.round(protonratio * calories / 4);
                            fats = Math.round(fatratio * calories / 9);
                            var rec = "calc-rec-m";
                            ratio = "40% carbs / 30% protein / 30% fats"
                            goal_text = "Maintenance";
                            break;
                        case "weight-gain":
                            calories += 500;
                            ccarbs = Math.round(carbratio * calories);
                            cprotons = Math.round(protonratio * calories);
                            cfats = Math.round(fatratio * calories);
                            carbs = Math.round(carbratio * calories / 4);
                            protons = Math.round(protonratio * calories / 4);
                            fats = Math.round(fatratio * calories / 9);
                            var rec = "calc-rec-wg";
                            ratio = "40% carbs / 30% protein / 30% fats"
                            goal_text = "Weight Gain";
                        break;
                    }
                    
                    $("#rs_1").html(`${nft.format(protons)} g per day (${nft.format(cprotons)} calories)`);
                    $("#rs_2").html(`${nft.format(carbs)} g per day (${nft.format(ccarbs)} calories)`);
                    $("#rs_3").html(`${nft.format(fats)} g per day (${nft.format(cfats)} calories)`);
                    $("#rs_4").html(`${nft.format(calories)}`);
                    
                } else {
                    $("#rs_1, #rs_2, #rs_3, #rs_4").html("-");
                }
            } else {
                $("#prcnt_err").slideDown();
                $("#rs_1, #rs_2, #rs_3, #rs_4").html("-");
            }
        }

        function onlyNum(num){
            return isFinite(num) ? num : 0;
        }

        function removeSign(vl){
            return Number(vl.replace(/\$|\%|,/g, ''));
        }

        // Validate email input field
        function validateEmailAdd(email) {
            const re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(email);
        }
    });
</script>